//======================================================================================================================
//
// リザルト処理 [result.cpp]
// Author:RYO KANDA
//
//======================================================================================================================
#include "result.h"

#include "keyboard.h"
#include "pad.h"

#include "score.h"

#include "bg.h"
#include "word.h"

//======================================================================================================================
// マクロ定義
//======================================================================================================================

//======================================================================================================================
// メンバ変数
//======================================================================================================================


//======================================================================================================================
// リザルト生成
//======================================================================================================================
CResult *CResult::Create()
{
	CResult *pResult;

	pResult = new CResult;

	pResult->Init();

	return pResult;
}

//======================================================================================================================
// 初期化
//======================================================================================================================
void CResult::Init()
{
	m_FadeCount = 300;

	CBg::Create(0, 0.005f);
	CWord::Create(CWord::WORD_RESULT, D3DXVECTOR3(SCREEN_WIDTH / 2.0f, SCREEN_HEIGHT / 10.0f, 0.0f), D3DXVECTOR3(500.0f, 100.0f, 0.0f));

	CWord::Create(CWord::WORD_RANK, D3DXVECTOR3(SCREEN_WIDTH / 4.0f, SCREEN_HEIGHT / 1.8f, 0.0f), D3DXVECTOR3(150.0f, 500.0f, 0.0f));

	for (int nCnt = 0; nCnt < 5; nCnt++)
	{
		CScore::Create(D3DXVECTOR3(SCREEN_WIDTH / 1.4f, SCREEN_HEIGHT / 3.8f + nCnt * 105.0f, 0.0f), D3DXVECTOR3(60.0f, 90.0f, 0.0f), nCnt);
	}
}

//======================================================================================================================
// 開放処理
//======================================================================================================================
void CResult::Uninit()
{

}

//======================================================================================================================
// 更新処理
//======================================================================================================================
void CResult::Update()
{
	CKeyboard *pKey = CManager::GetInputKeyboard();
	CPad *pPad = CManager::GetInputPad();

	if (pKey->GetKeyboardTrigger(DIK_RETURN) || pPad->GetJoypadTrigger(0, CPad::JOYPADKEY_B))
	{
		CRenderer::SetFade(CManager::MODE_TITLE);
	}
	if (--m_FadeCount == 0)
	{
		CRenderer::SetFade(CManager::MODE_TITLE);
	}
}

//======================================================================================================================
// 描画処理
//======================================================================================================================
void CResult::Draw()
{

}

//======================================================================================================================
// リザルト状態の設定
//======================================================================================================================
void CResult::SetResultState(RESULTSTATE state)
{
	g_ResultState = state;
}

//======================================================================================================================
// リザルト状態の取得
//======================================================================================================================
CResult::RESULTSTATE CResult::GetResultState(void)
{
	return g_ResultState;
}
