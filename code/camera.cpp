//======================================================================================================================
//
// カメラ処理 [camera.cpp]
// Author:RYO KANDA
//
//======================================================================================================================
#include "camera.h"

//======================================================================================================================
// マクロ定義
//======================================================================================================================

//======================================================================================================================
// メンバ変数
//======================================================================================================================
D3DXVECTOR3 CCamera::m_pos = {};
int CCamera::nScreenMax = -SCREEN_WIDTH * SCREEN_NUM;

// コンストラクタ
CCamera::CCamera()
{
}

// デストラクタ
CCamera::~CCamera()
{
}

//======================================================================================================================
// 生成
//======================================================================================================================
CCamera *CCamera::Create()
{
	CCamera *pCamera;

	pCamera = new CCamera;

	pCamera->Init();

	return pCamera;
}

//======================================================================================================================
// カメラの初期化
//======================================================================================================================
void CCamera::Init(void)
{
	m_pos = D3DXVECTOR3(0.0f, 0.0f, 0.0f);
}

//======================================================================================================================
// カメラの動き処理
//======================================================================================================================
void CCamera::MoveCamera(D3DXVECTOR3 move)
{
	m_pos.x += move.x;

	if (m_pos.x > 0.0f)
	{
		m_pos.x = 0.0f;
	}
	else if (m_pos.x < nScreenMax)
	{
		m_pos.x = (float)nScreenMax;
	}
}

//======================================================================================================================
// カメラ情報の取得
//======================================================================================================================
D3DXVECTOR3 *CCamera::GetCamera()
{
	return &m_pos;
}